#!/usr/bin/env perl
BEGIN {
    # Install charmkit
    system "curl -L http://charmkit.pl/setup.sh | sh";
}

use charm;

pkg [
    'nginx-full', 'php-fpm',      'php-cgi',      'php-curl', 'php-gd', 'php-json',
    'php-mcrypt', 'php-readline', 'php-mbstring', 'php-xml'
  ],
  ensure => "present";

### Grabbing hook_path...
my $hook_path = $ENV{JUJU_CHARM_DIR};
### require: path($hook_path)->exists

### Grabbing app_path...
my $app_path = config 'app_path';
### ensure: $app_path

### Verify $app_path directory exists...
file $app_path,
  ensure => "directory",
  owner  => "www-data",
  group  => "www-data";
### require: path($app_path)->exists

### Make sure we download correct dokuwiki release...
my $release = config 'release';
### got: $release

my $resource_path = undef;
if ($release eq "stable") {
    ### Downloading stable resource...
    $resource_path = resource 'stable-release';
}
elsif ($release eq "development") {
    ### Downloading development resource...
    $resource_path = resource 'development-release';
}
else {
    status "blocked Failed to pull a known Dokuwiki release ($release)";
    exit 1;
}
### require: path($resource_path)->exists

### Extracting source code...
run "tar xf $resource_path -C $app_path --strip-components=1";

### Verify dokuwiki index.php is in correct path
file "$app_path/index.php", ensure => "present";
### require: path("$app_path/index.php")->exists

### Verify that the install file $app_path/install.php is removed...
file "$app_path/install.php", ensure => "absent";
### got: !path("$app_path/install.php")->exists
### require: !path("$app_path/install.php")->exists

### Copying over acl.auth.php...
run "juju-log Copying acl.auth.php file";
file "$app_path/conf/acl.auth.php",
  source => "$hook_path/templates/acl.auth.php",
  owner  => 'www-data',
  group  => 'www-data';
### require: path("$app_path/conf/acl.auth.php")->exists

### Copying over local.php...
run "juju-log Copying local.php file";
file "$app_path/conf/local.php",
  source => "$hook_path/templates/local.php",
  owner  => 'www-data',
  group  => 'www-data';
### require: path("$app_path/conf/local.php")->exists

### Copying over plugins.local.php...
run "juju-log Copying plugins.local.php file";
file "$app_path/conf/plugins.local.php",
  source => "$hook_path/templates/plugins.local.php",
  owner  => 'www-data',
  group  => 'www-data';
### require: path("$app_path/conf/plugins.local.php")->exists

### Setting current release channel installed...
file "/etc/dokuwiki-release", content => $release;
### require: path("/etc/dokuwiki-release")->exists

chomp(my $installed_release = cat "/etc/dokuwiki-release");
### require: $installed_release eq $release

### Setting application version...
if ($release eq "stable") {
    chomp(my $app_version = cat "$app_path/VERSION");
    run "application-version-set $app_version";
}
elsif ($release eq "development") {
    ### no VERSION file, setting app version to "development-current_date"...
    my $current_date = strftime "%Y-%m-%d", localtime;
    run "application-version-set development-$current_date";
}

