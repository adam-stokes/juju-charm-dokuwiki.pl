#!/usr/bin/env perl

use charm;

run "status-set maintenance Configuring dokuwiki";

### Grabbing app_path...
my $app_path = config 'app_path';
### ensure: $app_path

### Grabbing hook_path...
my $hook_path = $ENV{JUJU_CHARM_DIR};
### require: path($hook_path)->exists

### Checking installed release...
chomp(my $installed_release = cat "/etc/dokuwiki-release";)

### got: $installed_release

### Grabbing release channel from charm config...
my $release = config 'release';
### got: $release
if ($release ne $installed_release) {
    ### The release channel has been changed, rerunning install hook...
    ### got: $release

    file $app_path, ensure => "absent";

    run './hooks/install';
}

### Ensure config variables are set...
my $admin_user = config 'admin_user';
### got: $admin_user
### ensure: $admin_user eq 'admin'

my $admin_password = config 'admin_password';
### got: $admin_password
### ensure: $admin_password

my $admin_name = config 'admin_name';
### got: $admin_name
### ensure: $admin_name

my $admin_email = config 'admin_email';
### got: $admin_email
### ensure: $admin_email

my $content = template(
    "$hook_path/templates/users.auth.php",
    admin_user     => $admin_user,
    admin_password => $admin_password,
    admin_name     => $admin_name,
    admin_email    => $admin_email
);
file "$app_path/conf/users.auth.php", content => $content;

### Grabbing public address...
my $public_address = unit 'public-address';
### ensure: $public_address

$content = template(
    "$hook_path/templates/vhost.conf",
    public_address => $public_address,
    app_path       => $app_path
);
file "/etc/nginx/sites-enabled/default", content => $content;

### Set www-data as the owner of $app_path...
chown "www-data", "$app_path", recursive => 1;

### stopping services
run './hooks/stop';

### starting services
run './hooks/start';

### NGINX should be configured and running now...
status 'active', 'NGINX configured';

### Dokuwiki should be ready...
status 'active', 'Ready';
